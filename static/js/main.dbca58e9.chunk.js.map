{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","robot","username","SearchBox","setsearchField","onChange","e","target","value","placeholder","type","App","useState","searchField","setRobots","useEffect","fetch","then","response","json","user","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAceA,MAZf,YAAoC,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,MAAOC,EAAM,EAANA,GACzB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,WACpD,gCACI,6BAAKL,IACL,4BAAIC,WCYLK,MAjBf,YAA+B,IAAXC,EAAU,EAAVA,OAChB,OACI,mCAEQA,EAAOC,KAAI,SAAAC,GAAK,OACZ,cAAC,EAAD,CAEIP,GAAIO,EAAMP,GACVD,MAAOQ,EAAMR,MACbS,SAAUD,EAAMC,SAChBV,KAAMS,EAAMT,MAJPS,EAAMP,UCMpBS,MAbf,YAAwC,IAAnBC,EAAkB,EAAlBA,eAEjB,OACI,qBAAKT,UAAU,MAAf,SACI,uBACIU,SAAU,SAACC,GAAD,OAAOF,EAAeE,EAAEC,OAAOC,QACzCC,YAAY,gBACZd,UAAU,mCACVe,KAAK,cC4BNC,MAhCf,WAAgB,IAAD,EACyBC,mBAAS,IADlC,mBACNC,EADM,KACOT,EADP,OAEeQ,mBAAS,IAFxB,mBAENb,EAFM,KAEEe,EAFF,KAIbC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAG,GACJN,EAAUM,QAEb,IAEH,IAAMC,EAAiBtB,EAASA,EAAOuB,QAAO,SAAArB,GAC5C,OAAOA,EAAMT,KAAK+B,cAAcC,SAASX,EAAYU,kBAClD,GAEL,OAAKxB,EAAO0B,OAIV,sBAAK9B,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBAEA,cAAC,EAAD,CAAWS,eAAgBA,IAC3B,cAAC,EAAD,CAAUL,OAAQsB,OAPb,6CCbIK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.dbca58e9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Card({ name, email, id }) {\r\n    return (\r\n        <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 tc\">\r\n            <img src={`https://robohash.org/${id}?200x200`} alt=\"robots\" />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport Card from './Card';\r\n\r\nfunction CardList({ robots }) {\r\n    return (\r\n        <>\r\n            {\r\n                robots.map(robot => (\r\n                    <Card\r\n                        key={robot.id}\r\n                        id={robot.id}\r\n                        email={robot.email}\r\n                        username={robot.username}\r\n                        name={robot.name} />\r\n                ))\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CardList\r\n","import React from 'react'\r\n\r\nfunction SearchBox({ setsearchField }) {\r\n\r\n    return (\r\n        <div className=\"pa2\">\r\n            <input\r\n                onChange={(e) => setsearchField(e.target.value)}\r\n                placeholder=\"search robots\"\r\n                className=\"pa3 ba b--green bg-lightest-blue\"\r\n                type=\"search\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import { useEffect, useState } from 'react';\nimport './App.css';\nimport CardList from './components/CardList';\nimport SearchBox from './components/SearchBox';\nimport Scroll from './components/Scroll';\n\nfunction App() {\n  const [searchField, setsearchField] = useState('');\n  const [robots, setRobots] = useState([]);\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => {\n        return response.json();\n      })\n      .then(user => {\n        setRobots(user)\n      });\n  }, []);\n\n  const filteredRobots = robots ? robots.filter(robot => {\n    return robot.name.toLowerCase().includes(searchField.toLowerCase());\n  }) : []\n\n  if (!robots.length) {\n    return <h1>Loading...</h1>\n  }\n  return (\n    <div className='tc'>\n      <h1 className=\"f1\">RoboFriends</h1>\n      {/* <Scroll> */}\n      <SearchBox setsearchField={setsearchField} />\n      <CardList robots={filteredRobots} />\n      {/* </Scroll> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"tachyons\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}